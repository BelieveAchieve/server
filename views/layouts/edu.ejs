<!doctype html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <link
      rel="stylesheet"
      href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css"
      integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T"
      crossorigin="anonymous">

    <script
      src='https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-MML-AM_CHTML'
      async>
    </script>

    <style type="text/css" media="screen">
      label {
        display: block;
        font-weight: bold;
      }

      .question-tile {
        border-width: .2rem;
        border: solid #f7f7f9;
      }

      .alert {
        top: 14px;
        padding-top: 0.55rem;
        padding-bottom: 0.55rem;
      }

      .invalid {
        border: 2px solid red;
      }

      .mathjax-guide-container pre {
        display: inline;
      }
    </style>

    <%- defineContent('head') %>

    <title><%- defineContent('title') %></title>
</head>

<body class="container p-5">
    <nav class="navbar navbar-expand-lg navbar-dark bg-dark fixed-top">
      <a class="navbar-brand" href="/">
        <img alt="UPchieve"
          style="width: 100px;"
          src="/static/img/p_logo_white.17e1586.png"/>
      </a>
      <button
        class="navbar-toggler"
        type="button"
        data-toggle="collapse"
        data-target="#navbarNavAltMarkup"
        aria-controls="navbarNavAltMarkup"
        aria-expanded="false"
        aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
      </button>
      <div class="collapse navbar-collapse" id="navbarNavAltMarkup">
        <div class="navbar-nav">
          <a href="/edu" class="nav-item nav-link <%= isActive('/') %>">Home</a>
          <a href="/edu/questions" class="nav-item nav-link <%= isActive('/questions') %>">Questions</a>
          <a href="/edu/questions/new" class="nav-item nav-link <%= isActive('/questions/new') %>">New Question</a>
        </div>
      </div>
    </nav>

    <%- defineContent('body') %>

    <%- include ../partials/mathjax-modal.ejs %>

    <script
      src="https://code.jquery.com/jquery-3.3.1.min.js"
      integrity="sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8="
      crossorigin="anonymous"></script>

    <script
      src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"
      integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1"
      crossorigin="anonymous"></script>

    <script
      src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"
      integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM"
      crossorigin="anonymous"></script>

    <script
      type="text/javascript"
      src="https://cdn.jsdelivr.net/npm/jquery-serializejson@2.9.0/jquery.serializejson.min.js">
    </script>

    <%- defineContent('scripts') %>

    <script>
      // Question Tile: Edit Button
      $('.js-question-tile').on('click', '.js-edit-button', e => {
        e.preventDefault()
        const $tile = $(e.target).closest('.js-question-tile')
        const $tileFlash = $tile.find('.js-tile-flash')
        $tileFlash.text('').removeClass('alert alert-danger alert-success')
        $tile.find('.js-question-form').removeClass('d-none')
        $tile.find('.js-question-rendered').addClass('d-none')
      })

      // Question Form: Cancel Button
      $('.js-question-tile').on('click', '.js-cancel-button', e => {
        e.preventDefault()
        const $tile = $(e.target).closest('.js-question-tile')
        $tile.find('.js-question-form').addClass('d-none')
        $tile.find('.js-question-rendered').removeClass('d-none')
        const $form = $tile.find('.js-question-form').first()
        const $formFlash = $form.find('.js-form-flash')
        $formFlash.text('').removeClass('alert alert-danger alert-success')
      })

      // TODO: Alert to confirm
      // Question Tile: Delete Button
      $('.js-question-tile').on('click', '.js-delete-button', e => {
        e.preventDefault()
        const $tile = $(e.target).closest('.js-question-tile')
        const $tileFlash = $tile.find('.js-tile-flash')
        $tileFlash.removeClass('alert alert-danger alert-success')

        const $form = $tile.find('.js-question-form').first()
        const $formFlash = $form.find('.js-form-flash')
        $formFlash.removeClass('alert alert-danger alert-success')

        const questionId = $tile.attr('id')
        const request = {
          type: 'delete',
          contentType: 'application/json; charset=utf-8',
          url: `/edu/questions/${questionId}`,
          dataType: 'json'
        }

        $.ajax(request).done(resp => {
          $tileFlash.text('Successfully deleted')
          $tileFlash.addClass('alert alert-success')
        }).fail(resp => {
          console.error('Request failed. Sent:', request)
          console.error(`Received ${resp.status} response: `, resp.responseText)
          $formFlash.text('Update failed.')
          $formFlash.addClass('alert alert-danger')
        })
      })

      // Question Form: Save Button
      $('.js-question-tile').on('click', '.js-save-button', e => {
        e.preventDefault()
        const $tile = $(e.target).closest('.js-question-tile')
        const $tileFlash = $tile.find('.js-tile-flash')
        $tileFlash.removeClass('alert alert-danger alert-success')

        const $form = $tile.find('.js-question-form').first()

        // Validate form has all required values
        const $requiredInputs = $form.find('input[required],textarea[required]')
        $requiredInputs.toArray().forEach(e => $(e).removeClass('invalid'))
        const missingValues = $requiredInputs.toArray().filter(e => !e.value)

        if (missingValues.length > 0) {
          missingValues.forEach(e => $(e).addClass('invalid'))
          return
        }

        const $formFlash = $form.find('.js-form-flash')
        $formFlash.removeClass('alert alert-danger alert-success')

        const question = $form.serializeJSON()
        question.possibleAnswers = question.possibleAnswers.filter(e => e.txt)

        const request = {
          type: $form.attr('method'),
          contentType: 'application/json; charset=utf-8',
          url: $form.attr('action'),
          data: JSON.stringify({ question }),
          dataType: 'json'
        }

        $.ajax(request).done(resp => {
          const {
            _id,
            category,
            subcategory,
            questionText,
            possibleAnswers,
            correctAnswer,
            imageSrc
          } = resp.question

          const categoryUri = encodeURIComponent(category)
          const subUri = encodeURIComponent(subcategory)
          $tile.attr('id', _id)
          $tile.find(`.js-category-link`).attr('href', `/edu/questions?category=${categoryUri}`)
          $tile.find(`.js-subcategory-link`).attr('href', `/edu/questions?subcategory=${subUri}`)
          $tile.find(`.js-category`).text(category)
          $tile.find(`.js-subcategory`).text(subcategory)
          $tile.find(`.js-questionText`).text(questionText)

          if (imageSrc) {
            $tile.find('.js-image img').removeClass('d-none')
            $form.find('.js-image img').removeClass('d-none')
            $tile.find('.js-image img').attr('src', imageSrc)
            $form.find('.js-image img').attr('src', imageSrc)
          } else {
            $tile.find('.js-image img').addClass('d-none')
            $form.find('.js-image img').addClass('d-none')
          }

          possibleAnswers.forEach(({val, txt}) => {
            const $option = $tile.find(`.js-possibleAnswers-${val}`)
            $option.text(`${val}. ${txt}`).removeClass('font-weight-bold')
            if (val === correctAnswer) {
              $option.addClass('font-weight-bold')
            }
          })

          $tileFlash.text('Update succeeded.')
          $tileFlash.addClass('alert alert-success')

          $tile.find('.js-question-form').addClass('d-none')
          $tile.find('.js-question-rendered').removeClass('d-none')

          // re-typeset math
          MathJax.Hub.Queue(['Typeset', MathJax.Hub, $tile[0]])
        }).fail(resp => {
          console.error('Request failed. Sent:', request)
          console.error(`Received ${resp.status} response: `, resp.responseText)
          $formFlash.text('Update failed.')
          $formFlash.addClass('alert alert-danger')
        })
      })
    </script>
</body>

</html>
